
import hrnn
import time
import numpy as np
import getCycles

net = [[0.000000000000000000000000E+0000, 0.350680351257324218750000E-0001, 0.638692855834960937500000E+0000, -0.755703926086425781250000E+0000, -0.619309902191162109375000E+0000],
          [-0.392206668853759765625000E+0000, 0.000000000000000000000000E+0000, -0.483913183212280273437500E+0000, 0.251545906066894531250000E-0001, 0.710200786590576171875000E+0000],
          [0.159279346466064453125000E+0000, -0.138426065444946289062500E+0000, 0.000000000000000000000000E+0000, 0.598297119140625000000000E-0001, 0.119009733200073242187500E+0000],
          [0.151961803436279296875000E+0000, -0.474640369415283203125000E+0000, 0.674424648284912109375000E+0000, 0.000000000000000000000000E+0000, 0.402131080627441406250000E-0001],
          [0.745916366577148437500000E-0002, -0.261993408203125000000000E+0000, - 0.740401744842529296875000E-0001, 0.243728160858154296875000E+0000, 0.000000000000000000000000E+0000]]

net = np.array(net).T
#net = getCycles.get_connectivity_matrix(9999, 14,0.0,0.0)
print(net)
print(net.shape)
nets = np.array([net.T])
print(nets.shape)


cycles = getCycles.getCyclesNX(net, net.shape[0], 0, 0)
print(cycles)



t1 = time.time()
#nets = np.ones((4,14,14))
print(nets)
dictMes = hrnn.runRHNNwithNets(0.0,nets)
t2 = time.time()
print(dictMes)
print(t2-t1)

print('cycles python',len(cycles[0]), 'cycles cpp',int(dictMes['NClu']))
print('Test result ', len(cycles[0]) == int(dictMes['NClu']))
